# Docker Compose for Mindlyfe Platform
# Removes version field to avoid deprecation warnings

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mindlyfe-postgres
    environment:
      POSTGRES_DB: mindlyfe
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./backend/migrations:/docker-entrypoint-initdb.d/migrations
    networks:
      - mindlyfe-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mindlyfe-backend
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=mindlyfe
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-in-production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mindlyfe-network
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/package-lock.json:/app/package-lock.json
    command: npm run dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Development Server
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: development
    container_name: mindlyfe-frontend
    environment:
      - VITE_API_URL=http://localhost:3001/api
      - VITE_APP_NAME=Mindlyfe
      - NODE_ENV=development
    ports:
      - "5173:8080"
    depends_on:
      - backend
    networks:
      - mindlyfe-network
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./vite.config.ts:/app/vite.config.ts
      - ./tailwind.config.ts:/app/tailwind.config.ts
      - ./postcss.config.js:/app/postcss.config.js
      - ./tsconfig.json:/app/tsconfig.json
      - ./index.html:/app/index.html
    command: npm run dev -- --host 0.0.0.0
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  mindlyfe-network:
    driver: bridge